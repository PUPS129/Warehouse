<Application x:Class="Warehouse.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Warehouse"
             xmlns:converters="clr-namespace:Warehouse.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--<converters:UserRoleConverter x:Name="UsrRoleConv"/>-->
        

        <ImageBrush x:Key="tb_mouse_over" ImageSource="././Images/WarehouseLogo.png"/>
        <ImageBrush x:Key="SearchMouseOver" ImageSource="././Images/InterfaceStuff/Navigation/Search96toggl.png" Opacity="1"/>

        <Style TargetType="local:MainWindow">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0" CornerRadius="10" GlassFrameThickness="0" NonClientFrameEdges="None" ResizeBorderThickness="5"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="local:LoginWindow">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0" CornerRadius="10" GlassFrameThickness="0" NonClientFrameEdges="None"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <converters:UserRoleConverter x:Key="UsrRoleConv"/>
        <converters:UserRoleButtonConverter x:Key="BtnVisible"/>

        <!--Value Converters-->

        <SolidColorBrush x:Key="MainBckgr" Color="#4A5668"/>
        <SolidColorBrush x:Key="TransparentBckgr" Color="#01000000"/>

        <!--Colors For Main Button-->
        <SolidColorBrush x:Key="MainBtnColor" Color="White"/>
        <SolidColorBrush x:Key="AdditionalBtnColor" Color="#3E97D1"/>
        <SolidColorBrush x:Key="AccentBtnColor" Color="#65A6D1"/>


        <!--Toggle Button Style-->
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border  x:Name="border"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True">
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource tb_mouse_over}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Toggle Button Style 2-->
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border  x:Name="border"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True">
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource SearchMouseOver}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource SearchMouseOver}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource SearchMouseOver}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource SearchMouseOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ToolTip Style-->
        <Style TargetType="ToolTip" x:Key="ToolTipStyle">

            <Setter Property="Placement" Value="Right"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="Background" Value="DarkSlateGray"/>
            <Setter Property="BorderBrush" Value="#2ECC71"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="PlacementRectangle" Value="65,0,0,0"/>
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="VerticalOffset" Value="6"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

        </Style>

        <!--ToolTip Style 2-->
        <Style TargetType="ToolTip" x:Key="ToolTipStyle1">

            <Setter Property="Placement" Value="Mouse"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="Background" Value="DarkSlateGray"/>
            <Setter Property="BorderBrush" Value="#2ECC71"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="PlacementRectangle" Value="65,0,0,0"/>
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="VerticalOffset" Value="6"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>

        </Style>

        <!--_____________-->
        <!--Button Styles-->
        <!--|||||||||||||-->

        <!--Main Button-->
        <Style TargetType="Button" x:Key="MainBtnStyle">
            <Setter Property="Background" Value="DarkSlateGray"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Exit Button-->
        <Style TargetType="Button" x:Key="ExitBtnStyle">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource TransparentBckgr}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="Gray" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="IndianRed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--ResizeAndMinimize Button-->
        <Style TargetType="Button" x:Key="ResizeAndMinimizeBtnStyle">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="DarkSlateGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="Gray" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Arrows Btn Style-->
        <Style TargetType="Button" x:Key="ArrowsBtnStyle">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource TransparentBckgr}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="#2ECC71" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Grid Button Styles-->
        <Style TargetType="Button" x:Key="GridBtnsStyle">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="Gray" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>


        <!--Menu Button Style-->
        <Style TargetType="Button" x:Key="MenuBtnSyle">
            <Setter Property="Background" Value="{StaticResource TransparentBckgr}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="8" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <SolidColorBrush x:Key="GotFocusColor" Color="Green" />
        <SolidColorBrush x:Key="LostFocusColor" Color="Transparent" />


        <ControlTemplate x:Key="scroll_background" TargetType="RepeatButton">
            <Border Background="Transparent">
            </Border>
        </ControlTemplate>

        <Style x:Key="scroll_thumb_style" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle Width="10" Fill="White" RadiusX="0" RadiusY="0">
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="scroll_thumb_stylecrosswise" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Rectangle  Fill="#7D7D7D" RadiusX="5" RadiusY="5">
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Data grid style-->
        <Style TargetType="DataGrid" x:Key="MainGridStyle">
            <Setter Property="BorderBrush" Value="Red" />
            <Setter Property="HorizontalGridLinesBrush" Value="Black" />
            <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
            <Setter Property="HeadersVisibility" Value="Column"/>

            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#2ECC71"/>
                        <Setter Property="BorderBrush" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">

                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Height" Value="25"/>

                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF262626"/>
                            </Trigger>

                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="#556378"/>
                            </Trigger>

                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="#353d4a"/>
                            </Trigger>


                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="White" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="White" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Padding" Value="4,3,4,3" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style TargetType="Control">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <Style.Resources>
                <Style TargetType="ScrollBar">
                    <Setter Property="Width" Value="10"/>
                    <Setter Property="MinWidth" Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="DarkSlateGray">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.00001*"/>
                                    </Grid.RowDefinitions>
                                    <Track HorizontalAlignment="Center" Name="PART_Track" Width="{TemplateBinding Width}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}"
                                    Value="{TemplateBinding Value}"  IsDirectionReversed="true">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Template="{StaticResource scroll_background}" Command="ScrollBar.LineUpCommand"  />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Template="{StaticResource scroll_background}" Command="ScrollBar.LineDownCommand" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource scroll_thumb_style}" >
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Height" Value="10"/>
                            <Setter Property="MinHeight" Value="10"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#7FA7A7A7">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0.00001*"/>
                                            </Grid.ColumnDefinitions>
                                            <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Template="{StaticResource scroll_background}" Command="ScrollBar.LineUpCommand"  />
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Template="{StaticResource scroll_background}" Command="ScrollBar.LineDownCommand" />
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb  Style="{DynamicResource scroll_thumb_stylecrosswise}" Height="8"/>
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

        
    </Application.Resources>
</Application>
